/**
 * @brief This is the Bare-Metal Project using FreeRTOS
 *	Using the STM32F407G-DISC1 board with STM32F407VGT6 MCU
 *	This project will toggle the User LED on the board for every 1 second
 *	User LD3: Orange LED is a user LED connected to the I/O PD13 of the STM32F407VGT6
 *	Pin: 13
 *	Port: D
 */

#include "my_tasks.h"

/* Macros for Address */
#define PERIPH_BASE				0x40000000UL

#define AHB1_OFFSET				0x00020000UL
#define AHB1_BASE				(AHB1_OFFSET + PERIPH_BASE)

#define GPIOD_OFFSET			0x0000C00UL
#define GPIOD_BASE				(GPIOD_OFFSET + AHB1_BASE)

#define RCC_OFFSET				0x00003800UL
#define RCC_BASE				(RCC_OFFSET + AHB1_BASE)

#define RCC_AHB1ENR_OFFSET		0x30UL
#define RCC_AHB1ENR_BASE		(RCC_AHB1ENR_OFFSET + RCC_BASE)

#define GPIO_MODER_OFFSET		0x00UL
#define GPIOD_MODER_BASE		(GPIOD_BASE + GPIO_MODER_OFFSET)

#define GPIO_ODR_OFFSET			0x14UL
#define GPIOD_ODR_BASE			(GPIOD_BASE + GPIO_ODR_OFFSET)

#define RCC_AHB1ENR				*(volatile unsigned int*)(RCC_AHB1ENR_BASE)
#define GPIOD_MODER				*(volatile unsigned int*)(GPIOD_MODER_BASE)
#define GPIOD_ODR				*(volatile unsigned int*)(GPIOD_ODR_BASE)

#define GPIODEN					1U<<3	// Set a 3rd bit in RCC_AHB1ENR
#define LED_PIN					1U<<13	// Set a 13th bit in GPIOD_ODR

int main()
{
	/* Enable a clock for GPIOD */
	RCC_AHB1ENR |= GPIODEN;

	/* Set the mode of the GPIO Pin to Output */
	GPIOD_MODER |= (1U<<26);
	GPIOD_MODER &= ~(1U<<27);

	/* Turning ON the LED */
	GPIOD_ODR |= LED_PIN;
}

void toggleLED(void) {

}
